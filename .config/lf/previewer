#!/bin/sh

image() {
    FILE_PATH="$1"
    X=$4
    Y=$5
    MW=$(($2 - 1))
    MH=$3

    # Handling floating terms like nvim floatterm
    if [ ! -z "$LF_OVERRIDE_X" ] && [ ! -z "$LF_OVERRIDE_Y" ]; then
        X="$LF_OVERRIDE_X"
        Y="$LF_OVERRIDE_Y"
    fi

    ueberzugpp cmd -s "$UB_SOCKET" -a add -i PREVIEW -x "$X" -y "$Y" --max-width "$MW" --max-height "$MH" -f "$FILE_PATH"
    exit 1
}

batorcat() {
    file="$1"
    shift
    if command -v bat >/dev/null 2>&1; then
        bat --color=always --style=plain --pager=never "$file" "$@"
    else
        cat "$file"
    fi
}

CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"

case "$(file --dereference --brief --mime-type -- "$1")" in
	image/*) 
        image "$1" "$2" "$3" "$4" "$5" "$1" 
        ;;
	# text/html) lynx -width="$4" -display_charset=utf-8 -dump "$1" ;;
	# text/troff) man ./ "$1" | col -b ;;
	text/* | */xml | application/json) 
        bat -p --terminal-width "$(($4-2))" -f "$1" 
        ;;
	audio/* | application/octet-stream) mediainfo "$1" || exit 1 ;;
	video/* )
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$1" -o "$CACHE" -s 0
		image "$CACHE" "$2" "$3" "$4" "$5" "$1"
		;;
	*/pdf)
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
		;;
	# */epub+zip|*/mobi*)
	# 	CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
	# 	[ ! -f "$CACHE.jpg" ] && gnome-epub-thumbnailer "$1" "$CACHE.jpg"
	# 	image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
	# 	;;
	application/*zip) atool --list -- "$1" ;;
	# *opendocument*) odt2txt "$1" ;;
	application/pgp-encrypted) gpg -d -- "$1" ;;
    *) 
        file -ibL "$1" | grep -q text && batorcat "$1" || file -Lb "$1" 
        ;;
esac

exit 0

